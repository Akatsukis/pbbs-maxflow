#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

dataDir = "data/"

applications = ["BFS","BC","Radii","Components","PageRank"]
applications = ["BC"]
wapplications = ["BellmanFord"]
wapplications = []
#pagerank = ["PageRank","PageRankDelta"]
pagerank = []

testfiles = ["randLocalGraph_J_5_10000000_ordered.bin","rMatGraph_J_5_10000000_ordered.bin","3Dgrid_J_10000000_ordered.bin"]#,"wiki-Talk.txt_J.bin","soc-LiveJournal1.txt_J.bin","cit-Patents.txt_J.bin","com-lj.ungraph_J.bin","com-orkut.ungraph_J.bin"]
testfiles = ["soc-LiveJournal1.txt_J_psep_ordered.pd.bin","com-orkut.ungraph.txt_J_psep_ordered.pd.bin"]#"cit-Patents.txt_J_psep_ordered.pd.bin","com-lj.ungraph_J_psep_ordered.pd.bin",
testfiles = ["cit-Patents.txt_J_psep_ordered.pd.bin","com-lj.ungraph.txt_J_psep_ordered.pd.bin"]
testfiles = []

wtestfiles = ["randLocalGraph_WJ_5_10000000_ordered.bin","rMatGraph_WJ_5_10000000_ordered.bin","3Dgrid_WJ_10000000_ordered.bin"]#,"wiki-Talk.txt_WJ.bin","soc-LiveJournal1.txt_WJ.bin","cit-Patents.txt_WJ.bin","com-lj.ungraph_WJ.bin","com-orkut.ungraph_WJ.bin"]
wtestfiles = []

processors = [80]
processors = [1,2,4]+range(8,80+1,8)
processors = range(40,80+1,8)

# for app in pagerank:
#   for testfile in testfiles:
#     for p in processors:
#       ss = "export CILK_NWORKERS="+`p`+"; ./" + app + " data/"+testfile+" -s"
#       print app+" "+`p` + " " + testfile 
#       print shellGetOutput(ss)
#       sys.stdout.flush()


for app in applications:
  for testfile in testfiles :
    for p in processors :
      for i in range(3):
        if p == 1:
          ss = "export CILK_NWORKERS=1; ./"+app+' -s '+dataDir+testfile
        else:
          ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s ' + dataDir + testfile
        print app+" "+`p` + " " + testfile 
        print shellGetOutput(ss)
        sys.stdout.flush()

for app in wapplications:
  for testfile in wtestfiles :
    for p in processors :
      for i in range(3):
        if p == 1:
          ss = "export CILK_NWORKERS=1; ./"+app+' -s '+dataDir+testfile
        else:
          ss = "export CILK_NWORKERS="+`p`+"; numactl -i all ./" + app + ' -s ' + dataDir + testfile
        print app+" "+`p` + " " + testfile 
        print shellGetOutput(ss)
        sys.stdout.flush()


#twitter
#os.system("~/hog2 250;")
for app in applications:
    for p in processors :
      for i in range(3):
        if p == 1:
          ss = "CILK_NWORKERS=1 ./"+app+' -r 1 data/twitter_J.pd.bin'
        else:
          ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + ' -r 1 data/twitter_J.pd.bin'
        print app+" "+`p` + " twitter"
        print shellGetOutput(ss)
        sys.stdout.flush()

# for app in wapplications:
#     for p in processors :
#       for i in range(3):
#         if p == 1:
#           ss = "CILK_NWORKERS=1 ./"+app+' data/twitter_WJ.pd.bin'
#         else:
#           ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + ' data/twitter_WJ.bin'
#         print app+" "+`p` + " twitter"
#         print shellGetOutput(ss)
#         sys.stdout.flush()

# sys.exit()
#yahoo
#os.system("~/hog2 250; make clean; export LONG=1; make;")
for app in applications:
  # ss = "export CILK_NWORKERS=1; ./"+app+' -s data/yahoo_J.bin'
  # print app+" 1 yahoo"
  # print shellGetOutput(ss)
  # sys.stdout.flush()
  for i in range(3):
    ss = "CILK_NWORKERS=80 ./"+app+' data/uk-union-2006-06-2007-05_J_reordered_hybrid.pd.bin'
    print app+" 80 uk-union-reordered (parallel decode)"
    print shellGetOutput(ss)
    sys.stdout.flush()

for app in wapplications:
  # ss = "export CILK_NWORKERS=1; ./"+app+' -s data/yahoo_WJ.bin'
  # print app+" 1 yahoo"
  # print shellGetOutput(ss)
  # sys.stdout.flush()
  for i in range(3):
    ss = "CILK_NWORKERS=80 ./"+app+' data/uk-union-2006-06-2007-05_WJ_reordered_hybrid.pd.bin'
    print app+" 80 uk-union-reordered (parallel decode)"
    print shellGetOutput(ss)
    sys.stdout.flush()
