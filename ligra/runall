#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

applications = ["BFS","BC","Radii","Components","PageRank"]
wapplications = ["BellmanFord"]
pagerank = ["PageRank","PageRankDelta"]

testfiles = ["randLocalGraph_J_5_10000000","rMatGraph_J_5_10000000","3Dgrid_J_10000000"]

wtestfiles = ["randLocalGraph_WJ_5_10000000","rMatGraph_WJ_5_10000000","3Dgrid_WJ_10000000"]


processors = [1,2,4]+range(8,80+1,8)
#processors= []

# for app in pagerank:
#   for testfile in testfiles:
#     for p in processors:
#       ss = "export CILK_NWORKERS="+`p`+"; ./" + app + " data/"+testfile+" -s"
#       print app+" "+`p` + " " + testfile 
#       print shellGetOutput(ss)
#       sys.stdout.flush()
      
for app in applications:
  ss = "export CILK_NWORKERS=80; ./"+app+" data/twitter_J"
  print app+" 80 twitter"
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()

  ss = "export CILK_NWORKERS=1; ./"+app+" data/twitter_J"
  print app+" 1 twitter"
  print shellGetOutput(ss)
  sys.stdout.flush()

#os.system("make clean;unset LONG;make;")

for app in applications:
  for testfile in testfiles :
    for p in processors :
      ss = "export CILK_NWORKERS="+`p`+"; ./" + app + " data/"+testfile+" -s"
      print app+" "+`p` + " " + testfile 
      print shellGetOutput(ss)
      sys.stdout.flush()


for app in wapplications:
  for testfile in wtestfiles :
    for p in processors :
      ss = "export CILK_NWORKERS="+`p`+"; ./" + app + " data/"+testfile+" -s"
      print app+" "+`p` + " " + testfile 
      print shellGetOutput(ss)
      sys.stdout.flush()

for app in applications:
  ss = "export CILK_NWORKERS=80; ./"+app+" data/rMatGraph_J_16_134217728_noDups -s"
  print app+" 80 rMat27"
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()


  ss = "export CILK_NWORKERS=1; ./"+app+" data/rMatGraph_J_16_134217728_noDups -s"
  print app+" 1 rMat27"
  print shellGetOutput(ss)
  sys.stdout.flush()

os.system("make clean;export LONG=1;make;~/hog2 250")

for app in wapplications:
  ss = "export CILK_NWORKERS=80; ./"+app+" data/rMatGraph_WJ_16_134217728_noDups -s"
  print app+" 80 rMat27"
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()

  ss = "export CILK_NWORKERS=1; ./"+app+" data/rMatGraph_WJ_16_134217728_noDups -s"
  print app+" 1 rMat27"
  print shellGetOutput(ss)
  sys.stdout.flush()


os.system("~/hog2 250")

for app in applications+wapplications:
  ss = "export CILK_NWORKERS=80; ./"+app+" data/yahoo -s -b"
  print app+" 80 yahoo"
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()
  print shellGetOutput(ss)
  sys.stdout.flush()

  ss = "export CILK_NWORKERS=1; ./"+app+" data/yahoo -s -b"
  print app+" 1 yahoo"
  print shellGetOutput(ss)
  sys.stdout.flush()

# os.system("~/hog2 200")

# for app in wapplications+["PageRank"]:
#   ss = "export CILK_NWORKERS=80; ./"+app+" ~/data/yahoograph/yahoows -s -b"
#   print app+" 80 yahoo"
#   print shellGetOutput(ss)
#   sys.stdout.flush()

#   ss = "export CILK_NWORKERS=1; ./"+app+" ~/data/yahoograph/yahoows -s -b"
#   print app+" 1 yahoo"
#   print shellGetOutput(ss)
#   sys.stdout.flush()






os.system("export CILK_NWORKERS=80;")

#testing
#os.system("./BFS data/yahoo -a -b")
