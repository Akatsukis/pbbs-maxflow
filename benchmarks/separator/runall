#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

applications = ["d128Separator","nd128Separator"]
applications = ["nd128Separator"]
#serial_applications = ["serialHash"]
testfiles = ["3Dgrid_E_10000000_ordered","randLocalGraph_E_5_10000000_ordered","rMatGraph_E_5_10000000_ordered"]
testfiles = ["wiki-Talk.txt_E","soc-LiveJournal1.txt_E","cit-Patents.txt_E","com-lj.ungraph.txt_E","com-orkut.ungraph.txt_E"]

processors = [1,2,4]+range(8,80+1,8)
#processors = [1,40,60,80]

for app in applications:
  for testfile in testfiles :
    for p in processors :
      ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + "/Separator -r 3 graphData/data/"+testfile
      print app+" "+`p` + " " + testfile 
      print shellGetOutput(ss)
      sys.stdout.flush()

