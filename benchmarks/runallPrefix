#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

applications = ["randPerm/parallelRandPerm2/randPerm","randPerm/sortRandPerm/randPerm","listRanking/parallelListRanking2/listRanking","treeContraction/parallelTreeContraction/treeContraction"]
applications = ["listRanking/parallelListRanking2/listRanking"]

serial_applications=["randPerm/serialRandPerm2/randPerm","listRanking/serialListRanking2/listRanking","treeContraction/serialTreeContraction/treeContraction"]
serial_applications = ["listRanking/serialListRanking2/listRanking"]

processors = [1,2,4]+range(8,80+1,8)
size = "1000000000"

for app in applications:
  for p in processors : #parallel
    ss = "export CILK_NWORKERS="+`p`+"; ./" + app + " -r 3 " + size
    print app+" "+`p`
    print shellGetOutput(ss)
    sys.stdout.flush()

for app in serial_applications:
  ss = "./" + app + " -r 3 " + size
  print app
  print shellGetOutput(ss)
  sys.stdout.flush()

os.system("unset CILK_NWORKERS;")
