#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

applications = ["BFSCC"]

testfiles = ["randLocalGraph_J_5_100000000","rMatGraph_J_5_100000000","rMatGraph_J_500_1000000","3Dgrid_J_100000000","lineGraph_J_500000000","com-orkut.ungraph.txt_J"]
testfiles = ["com-orkut.ungraph.txt_J"]

processors = [1,2,4]+range(8,80+1,8)

for app in applications:
  for testfile in testfiles :
    for p in processors :
      if p == 1:
        os.system("unset MKLROOT; rm BFSCC; make BFSCC;")
        ss = "CILK_NWORKERS="+`p`+" ./" + app + " -s data/"+testfile
        print app+" "+`p` + " " + testfile 
        print shellGetOutput(ss)
        sys.stdout.flush()
        os.system("export MKLROOT=1; rm BFSCC; make BFSCC")
      else:
        for i in range(3):
          ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + " -s data/"+testfile
          print app+" "+`p` + " " + testfile 
          print shellGetOutput(ss)
          sys.stdout.flush()
        
