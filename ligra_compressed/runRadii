#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

dataDir = "data/"
outDir = "radii_stats/"

applications = ["RadiiSampled2Phase","RadiiSampled1Phase","LogCounterRadii","LogLogCounterRadii"]
# applications = ["RadiiSampled1Phase"]
# applications = ["LogLogCounterRadii"]

testfiles = ["randLocalGraph_J_5_10000000_ordered.bin","rMatGraph_J_5_10000000_ordered.bin","3Dgrid_J_10000000_ordered.bin","wiki-Talk.txt_J.bin","soc-LiveJournal1.txt_J.bin","cit-Patents.txt_J.bin","com-lj.ungraph.txt_J.bin","com-orkut.ungraph.txt_J.bin"]

sampleSize = [1,2,4,8,16,32,64,128,256,512]
processors = [80]
seeds = [1,2,3]

for app in applications:
  for testfile in testfiles :
    for p in processors :
      for l in sampleSize:
        for i in seeds:
          #ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + ' -seed ' + `i` + ' -s -l ' + `l` + ' -o ' + outDir + testfile + "_" + app + "_radii_" + `l` + "_seed_" + `i` + " "  + dataDir + testfile
          ss = "CILK_NWORKERS="+`p`+" numactl -i all ./" + app + ' -seed ' + `i` + ' -s -l ' + `l` + " "  + dataDir + testfile

          print app+" "+`p` + " " + testfile + " " + `l` + " " + `i`
          print shellGetOutput(ss)
          sys.stdout.flush()
