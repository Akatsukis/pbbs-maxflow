#!/usr/bin/python
#
# run all tests
#

import os
import sys
import signal
import time
import subprocess


def signal_handler(signal,frame):
  print "bye\n"
  sys.exit(0)
signal.signal(signal.SIGINT,signal_handler)

def shellGetOutput(str) :
  process = subprocess.Popen(str,shell=True,stdout=subprocess.PIPE,
                             stderr=subprocess.PIPE)
  output, err = process.communicate()
  
  if (len(err) > 0):
      raise NameError(str+"\n"+output+err)
  return output

dataDir = "~/data/"
outDir = "~/radii_stats/"

applications = ["RadiiSampled2Phase","RadiiSampled1Phase","LogCounterRadii","LogLogCounterRadii"]
#applications = ["RadiiSampled1Phase"]

testfiles = ["randLocalGraph_J_5_10000000_ordered","rMatGraph_J_5_10000000_ordered","3Dgrid_J_10000000_ordered","wiki-Talk.txt_J","soc-LiveJournal1.txt_J","cit-Patents.txt_J","com-lj.ungraph.txt_J","com-orkut.ungraph.txt_J"]

sampleSize = [1,2,4,8,16,32,64,128,256,512]
processors = [80]
seeds = [1,2,3]

for app in applications:
  for testfile in testfiles :
    for p in processors :
      for l in sampleSize:
        for i in seeds:
          ss = "CILK_NWORKERS="+`p`+" numactl -i all ./computeRadiiStats " + dataDir+testfile+'_allRadii ' + outDir + testfile+'.bin_'+app +'_radii_'+`l`+'_seed_'+`i`
          print app+" "+`p` + " " + testfile + " " + `l` + " " + `i`
          print shellGetOutput(ss)
          sys.stdout.flush()
